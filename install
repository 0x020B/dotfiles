#!/bin/sh -v
disk='/dev/sda'
swapfile='/mnt/swap'
self=$(dirname "$(readlink -f $0)")
echo 'github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl' > ~/.ssh/known_hosts
export GIT_SSH_COMMAND="ssh -i $(pwd)/id_ed25519"
sha512sum -c "$self"/sha512sum --status || {
	git -v 1>/dev/null || pacman -Sy git --noconfirm
	grep -Fq 'raw.githubusercontent.com' /etc/hosts ||
	echo '185.199.109.133 raw.githubusercontent.com' >> /etc/hosts
	if [ ! -f id_ed25519 ];then
		curl -O 'https://raw.githubusercontent.com/n0tr00teuorg/dotfiles/main/id_ed25519'
		chmod -v 0600 id_ed25519
	fi
	git clone git@github.com:n0tr00teuorg/dotfiles --depth 1
	exit 1
}
sfdisk --delete "$disk"
parted -s "$disk" mklabel gpt mkpart ESP fat32 1M 513M mkpart primary btrfs 513M 100%
mkfs.btrfs -fn 32k "$disk"2
mount -vo compress=lzo "$disk"2 /mnt
btrfs -v subvolume create /mnt/@
btrfs -v subvolume create /mnt/@etc
btrfs -v subvolume create /mnt/@home
btrfs -v subvolume create /mnt/@var
umount /mnt
mount -vo noatime,nodiratime,compress=lzo,subvol=@	"$disk"2 /mnt
mkdir -v /mnt/{boot,etc,home,var}
mount -vo noatime,nodiratime				"$disk"1 /mnt/boot
mount -vo noatime,nodiratime,compress=lzo,subvol=@etc	"$disk"2 /mnt/etc
mount -vo noatime,nodiratime,compress=lzo,subvol=@home	"$disk"2 /mnt/home
mount -vo noatime,nodiratime,compress=lzo,subvol=@var	"$disk"2 /mnt/var
chattr +C /mnt/var
truncate -s 0 "$swapfile"
chattr +C "$swapfile"
fallocate -l 8G "$swapfile"
chmod 0600 "$swapfile"
mkswap "$swapfile"
swapon "$swapfile"
cp -vf "$self"/etc/pacman.conf /etc
cp -rvf "$self"/etc/pacman.d/* /etc/pacman.d/
git submodule update -f --recursive
useradd user
sed -i -E 's#(user:)[^:]*(.*)#\1$1$14514$GDb28bq4U4PXUWCCmrvzg/\2#' /etc/shadow	# PASSWORD: 1919810
echo 'user ALL = NOPASSWD: ALL' > /etc/sudoers.d/user
for keyring in "alhp-keyring" "arch4edu-keyring"
do
	cd "$self/$keyring"
	su user -c 'makepkg -i'
done
cd "$self"
pacman -U https://www.blackarch.org/keyring/blackarch-keyring.pkg.tar.xz
pacman -Sy
sed -i 's#/mirrorlist#/*#g' /usr/bin/pacstrap
pacstrap -K /mnt $(<requirements.txt)
genfstab -U /mnt >> /mnt/etc/fstab
arch-chroot /mnt ln -svf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
hwclock --systohc --adjfile /mnt/etc/adjtime
cp -rvf etc/* /mnt/etc/
#semanage fcontext -a -t swapfile_t "$swapfile"
#restorecon "$swapfile"
arch-chroot /mnt mkinitcpio -P
arch-chroot /mnt useradd -m -G wheel -s /usr/bin/zsh n0tr00t
echo -n $RANDOM > PASSWORD
sed -i -E "s#(n0tr00t:)[^:]*(.*)#\1$(openssl passwd -6 -in PASSWORD)\2#" /mnt/etc/shadow

#uuidgen --random > GUID.txt
#for key in "PK" "KEK" "db"
#do
#	openssl req -newkey rsa:4096 -nodes -keyout $key.key -new -x509 -sha512 -days 3650 -subj '/CN=12339/' -out $key.crt
#	openssl x509 -outform DER -in $key.crt -out $key.cer
#	cert-to-efi-sig-list -g "$(< GUID.txt)" $key.crt $key.esl
#done
#sign-efi-sig-list -g "$(< GUID.txt)" -k PK.key -c PK.crt PK PK.esl PK.auth
#sign-efi-sig-list -g "$(< GUID.txt)" -k PK.key -c PK.crt KEK KEK.esl KEK.auth
#sign-efi-sig-list -g "$(< GUID.txt)" -k KEK.key -c KEK.crt db db.esl db.auth

#sbsign --key db.key --cert db.crt --output /boot/vmlinuz-linux-zen{,}
#sbsign --key db.key --cert db.crt --output /boot/Shell_x64.efi{,}

efibootmgr -c -d "$disk" -L 'Boot with standard options' -l /vmlinuz-linux-zen \
	-u "root=$(findmnt -no UUID /mnt) rootflag=subvol=@ rw "\
	'lsm=landlock,lockdown,yama,selinux,apparmor,bpf selinux=1 security=apparmor '\
	'initrd=\\amd-ucode.img initrd=\initramfs-linux-zen.img'

efibootmgr -c -d "$disk" -L 'Boot with fallback options' -l /vmlinuz-linux-zen \
	-u "root=$(findmnt -no UUID /mnt) rootflag=subvol=@ rw "\
	'lsm=landlock,lockdown,yama,selinux,apparmor,bpf selinux=1 security=apparmor '\
	'initrd=\\amd-ucode.img initrd=\initramfs-linux-zen-fallback.img'

efibootmgr -c -d "$disk" -L 'Boot with minimal options' -l /vmlinuz-linux-zen \
	-u "root=$(findmnt -no UUID /mnt) rootflag=subvol=@ rw "\
	'initrd=\initramfs-linux-zen.img'

efibootmgr -c -d "$disk" -p 1 -L "UEFI Shell" -l '/Shell_x64.efi' -u
swapoff -v $swapfile
umount -Rv /mnt
printf "PASSWORD: %s\n" "$(<PASSWORD)"
